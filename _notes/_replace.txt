$player stopwatch
exec coop_mod/replace.scr::stopwatch

$player stufftext "tmstop"
exec coop_mod/replace.scr::tmstop

$player stufftext "tmstartloop 
exec coop_mod/replace.scr::tmstartloop
//careful when replacing, that no " is left over !!!

$player stufftext "tmstart 
exec coop_mod/replace.scr::tmstart
//careful when replacing, that no " is left over !!!

lookat $player
exec coop_mod/replace.scr::lookat //chrissstrahl - coop compatible

eyeslookat $player
exec coop_mod/replace.scr::eyeslookat

turnto $player
exec coop_mod/replace.scr::turnto

$entity solid
$entity exec coop_mod/replace.scr::solid ( 0 0 0) //chrissstrahl - makes entity solid and moves players touching it to the given vector

$player istouching
exec coop_mod/replace.scr::istouching

//return first player found touching the given entity (starts at $player[1])
exec coop_mod/replace.scr::getToucher $trigger

local.ent == $player OR level.spottarget == $player
local.ent.targetname == "player"

aimat $player
exec coop_mod/replace.scr::aimat

$player item
//param1=item-model, optional param2=use-item-rightnow
//exec coop_mod/replace.scr::item weapons/pistol.tik 1 //give pistol and use it right away
exec coop_mod/replace.scr::item

$player take
exec coop_mod/replace.scr::take

$player takeall
exec coop_mod/replace.scr::takeAll

$player.has_disguise = 1
exec coop_mod/replace.scr::set_hasdisguise 1

$player.has_disguise = 0
exec coop_mod/replace.scr::set_hasdisguise 0

$player playsound
exec coop_mod/replace.scr::playsound
waitexec coop_mod/replace.scr::playsound

$player loopsound
exec coop_mod/replace.scr::loopsound

$player stoploopsound
exec coop_mod/replace.scr::stoploopsound

cansee $player
//used to check if it can see any player
exec coop_mod/replace.scr::cansee

$ai cansee $player
//used to get closest seen player, if no player can be seen it returns NULL
local.player = $ai exec coop_mod/replace.scr::canseeGetClosest

canseenoents $player
//used to get closest seen player, if no player can be seen it returns NULL
exec coop_mod/replace.scr::canseenoents

$player cansee
//check if player can see the entity
exec coop_mod/replace.scr::playerCansee

$player threatbias
exec coop_mod/replace.scr::threatbias

//careful here, this is ONLY meant to be used by enemy ai attacking any player
$enemy runto $player
$enemy exec coop_mod/replace.scr::runtoClosest	//chrissstrahl - coop

//get closest player
local.player = exec coop_mod/replace.scr::player_closestTo self

//get closest player origin
local.origin = exec coop_mod/replace.scr::origin self

//check if var is $player and a array (if > 1 player on server)
if( exec coop_mod/replace.scr::isPlayerArray local.target )

//check singleplayer
if( level.coop_singleplayer )

//get sv_maxclients
level.coop_svmaxclients = int(getcvar("sv_maxclients"))
		
$player glue
exec coop_mod/replace.scr::glue

$player unglue
exec coop_mod/replace.scr::unglue

$player physics_on
exec coop_mod/replace.scr::physics_on

$player physics_off
exec coop_mod/replace.scr::physics_off	

$player forcelegstate
exec coop_mod/replace.scr::forcelegsstate

$player playsound
exec coop_mod/replace.scr::playsound

$ai holster
exec coop_mod/replace.scr::holster

$ai unholster
exec coop_mod/replace.scr::unholster

(vector_length ( $player.origin - self.origin) < level.chatdistance)
exec coop_mod/replace.scr::withinDistanceOf $entity 128

//checks if any player is within the given distance of the given vector
exec coop_mod/replace.scr::withinDistance ( 666 69 -1 ) 512

$player ammo smg 100 $player playsound mp40_snd_pickup
exec coop_mod/replace.scr::ammo smg 100 [optional:soundtoplay]

sighttrace ($player.origin + (0 0 50)) (local.ai_alerted.origin + (0 0 50)) 1
(exec coop_mod/replace.scr::sighttrace (0 0 50) (local.ai_alerted.origin + (0 0 50) 1)

level waittill spawn
waitthread coop_mod/replace.scr::waitForPlayer

self waittill drive
self waitexec coop_mod/replace.scr::waittilldrive

//waits until self is in range of other
self waitexec coop_mod/replace.scr::waittillrange local.other local.range

//skip briefing/cinematic
waitexec coop_mod/replace.scr::skip

//kill players touching this entity (used for exploding truck collision entity or general killzones)
$truck exec coop_mod/replace.scr::killzone

$player.alarmoff = 
level.alarmer_alarmoff = 

$ai tether $player
$ai exec coop_mod/main.scr::tether

$ai.destination $player
$ai exec coop_mod/main.scr::destination

//force primary weapon to all players, no matter what they select
//applied upon spawn/respawn, you might want to set variable before
//coop mod main is executed
level.coop_forcePrimary = "weapons/whatever.tik"

//force secondary weapon to all players, no matter what they select
//applied upon spawn/respawn, you might want to set variable before
//coop mod main is executed
level.coop_forceSecondary = "weapons/whatever.tik"

//takes all primary weapons and forces the new weapon on to the player
//if you want the weapon forced permanantly set level.coop_forcePrimary as well
exec coop_mod/main.scr::playerForcePrimary local.player local.weapon

//takes all secondary weapons and forces the new weapon on to the player
//if you want the weapon forced permanantly set level.coop_forceSecondary as well
exec coop_mod/main.scr::playerForceSecondary local.player local.weapon





if (sighttrace ($player.origin + (0 0 50)) (local.ai_alerted.origin + (0 0 50)) 1 != 1)
$alarm_switch_trigger[$zone_trigger[local.ai_alerted.zone_index].alarm_switch_index] douse $player
WHAT DOES IT DO $player perferredweapon
